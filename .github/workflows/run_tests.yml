name: Tests

on: [push]

jobs:
  run-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
        #python-version: [3.8, 3.9, '3.10', '3.11', '3.12', '3.13']
      max-parallel: 2

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip freeze|grep -e boto -e urllib
        python -c 'import ssl'
        python -c 'import boto3, botocore; print(boto3.__version__, botocore.__version__)'
        pip install -e .

    - name: Lint with flake8
      run: |
        pip install -q flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --ignore=E402,C901 --max-line-length=127 --statistics

    - name: Test with pytest
      env:
        DL_BUCKET_NAME: ${{ secrets.DL_BUCKET_NAME }} 
        DL_SECRET_KEY: ${{ secrets.DL_SECRET_KEY }} 
        DL_ACCESS_KEY: ${{ secrets.DL_ACCESS_KEY }} 
        DL_URL: ${{ secrets.DL_URL }} 
      run: |
        pip install -q pytest
        pytest -rP -k 'not dask' #pytest --cov=./
